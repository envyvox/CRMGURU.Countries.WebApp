// <auto-generated />
using System;
using CRMGURU.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRMGURU.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRMGURU.Data.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_cities");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_cities_name");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("CRMGURU.Data.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<double>("Area")
                        .HasColumnType("float")
                        .HasColumnName("area");

                    b.Property<Guid>("CapitalId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("capital_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("name");

                    b.Property<long>("Population")
                        .HasColumnType("bigint")
                        .HasColumnName("population");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("region_id");

                    b.HasKey("Id")
                        .HasName("pk_countries");

                    b.HasIndex("CapitalId")
                        .HasDatabaseName("ix_countries_capital_id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_countries_name");

                    b.HasIndex("RegionId")
                        .HasDatabaseName("ix_countries_region_id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("CRMGURU.Data.Entities.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_regions");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_regions_name");

                    b.ToTable("regions");
                });

            modelBuilder.Entity("CRMGURU.Data.Entities.Country", b =>
                {
                    b.HasOne("CRMGURU.Data.Entities.City", "Capital")
                        .WithMany()
                        .HasForeignKey("CapitalId")
                        .HasConstraintName("fk_countries_cities_capital_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMGURU.Data.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .HasConstraintName("fk_countries_regions_region_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capital");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
